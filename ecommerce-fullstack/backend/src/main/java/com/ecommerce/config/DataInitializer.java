package com.ecommerce.config;

import com.ecommerce.model.*;
import com.ecommerce.repository.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.stereotype.Component;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.Optional;

@Component
public class DataInitializer implements CommandLineRunner {

    @Autowired
    private ProductRepository productRepository;
    
    @Autowired
    private UserRepository userRepository;
    
    @Autowired
    private OrderRepository orderRepository;
    
    @Autowired
    private ReceiptRepository receiptRepository;
    
    @Autowired
    private ReviewRepository reviewRepository;
    
    @Autowired
    private ComplaintRepository complaintRepository;
    
    @Autowired
    private UserDiscountRepository userDiscountRepository;
    
    @Autowired
    private ReturnRepository returnRepository;

    @Override
    public void run(String... args) throws Exception {
        try {
            // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å MongoDB
            Thread.sleep(5000);
            
            System.out.println("Attempting to connect to MongoDB sklep database...");
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Å —Ç–∞–π–º–∞—É—Ç–æ–º
            long count = -1;
            int maxRetries = 3;
            for (int i = 0; i < maxRetries; i++) {
                try {
                    count = productRepository.count();
                    System.out.println("Current products count in MongoDB sklep: " + count);
                    break;
                } catch (Exception e) {
                    System.err.println("Attempt " + (i + 1) + " failed to connect to MongoDB: " + e.getMessage());
                    if (i < maxRetries - 1) {
                        Thread.sleep(3000);
                    } else {
                        throw e;
                    }
                }
            }
              // –ï—Å–ª–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
            if (count == 0) {
                System.out.println("Initializing products in MongoDB sklep database...");
                initializeAllProducts();
                System.out.println("Successfully initialized products in MongoDB!");
            } else {
                System.out.println("Database already contains " + count + " products. Skipping product initialization.");
            }
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è
            initializeUserProfileData();
            
        } catch (Exception e) {
            System.err.println("Failed to initialize database: " + e.getMessage());
            e.printStackTrace();
            System.err.println("Application will continue without sample data.");
        }
    }

    // –ú–µ—Ç–æ–¥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –æ—Å—Ç–∞–≤–ª—è–µ–º –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –±—É–¥—É—â–µ–º
    private void initializeProducts() {
        // ...existing code...
    }

private Product createProduct(String name, String nameRu, String namePl, Double price, String image, 
                             String categoryId, String subcategoryId, String sectionType, 
                             Double rating, Boolean isNew, Integer discount) {
    Product product = new Product(name, nameRu, namePl, price, image, categoryId, subcategoryId);
    product.setSectionType(sectionType);
    product.setRating(rating);
    product.setIsNew(isNew);
    product.setDiscount(discount);
    
    // –ò–∑–≤–ª–µ–∫–∞–µ–º –±—Ä–µ–Ω–¥ –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è
    String brand = extractBrandFromName(name);
    if (brand != null) {
        product.setBrand(brand);
    }
    
    if (discount > 0) {
        product.setOldPrice(price);
        product.setPrice(price * (100 - discount) / 100);
    }
    
    return product;
}

// –ú–µ—Ç–æ–¥ –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –±—Ä–µ–Ω–¥–∞ –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞
private String extractBrandFromName(String name) {
    String[] knownBrands = {
        "Apple", "Samsung", "Sony", "Google", "Xiaomi", "OnePlus", "Huawei",
        "Nike", "Adidas", "Puma", "Reebok", "New Balance",
        "Canon", "Nikon", "Fujifilm", "GoPro",
        "Dell", "HP", "Lenovo", "ASUS", "Acer", "Microsoft",
        "Bose", "JBL", "Sennheiser", "Beats",
        "iPhone", "Galaxy", "Pixel", "MacBook", "ThinkPad", "Surface"
    };
    
    String lowerName = name.toLowerCase();
    for (String brand : knownBrands) {
        if (lowerName.contains(brand.toLowerCase())) {
            return brand;
        }
    }
    return null;
}

// Full product initialization method
private void initializeAllProducts() {
    List<Product> products = Arrays.asList(
        // ELECTRONICS CATEGORY
        // Smartphones subcategory - —É–±–µ–¥–∏–º—Å—è —á—Ç–æ subcategory = "smartphones"
        createProduct("iPhone 15 Pro", "iPhone 15 Pro", "iPhone 15 Pro", 999.99, "üì±", "electronics", "smartphones", "new-arrivals", 4.8, true, 0),
        createProduct("Samsung Galaxy S24", "Samsung Galaxy S24", "Samsung Galaxy S24", 899.99, "üì±", "electronics", "smartphones", "hot-deals", 4.7, false, 10),
        createProduct("Google Pixel 8", "Google Pixel 8", "Google Pixel 8", 699.99, "üì±", "electronics", "smartphones", "recommended", 4.6, false, 5),
        createProduct("OnePlus 12", "OnePlus 12", "OnePlus 12", 799.99, "üì±", "electronics", "smartphones", "discounts", 4.5, false, 15),
        createProduct("Xiaomi Mi 14", "Xiaomi Mi 14", "Xiaomi Mi 14", 599.99, "üì±", "electronics", "smartphones", "hot-deals", 4.4, false, 20),
        
        // –î–æ–±–∞–≤–∏–º –µ—â–µ –ø—Ä–æ–¥—É–∫—Ç—ã –¥–ª—è –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ cameras
        createProduct("Canon EOS R5", "Canon EOS R5", "Canon EOS R5", 2499.99, "üì∑", "electronics", "cameras", "new-arrivals", 4.8, true, 0),
        createProduct("Sony Alpha A7 IV", "Sony Alpha A7 IV", "Sony Alpha A7 IV", 2199.99, "üì∑", "electronics", "cameras", "recommended", 4.7, false, 5),
        createProduct("Nikon D850", "Nikon D850", "Nikon D850", 1899.99, "üì∑", "electronics", "cameras", "hot-deals", 4.6, false, 10),
        
        // –î–æ–±–∞–≤–∏–º –ø—Ä–æ–¥—É–∫—Ç—ã –¥–ª—è –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ accessories
        createProduct("Phone Case", "–ß–µ—Ö–æ–ª –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "Etui na telefon", 29.99, "üì±", "electronics", "accessories", "recommended", 4.2, false, 0),
        createProduct("Wireless Charger", "–ë–µ—Å–ø—Ä–æ–≤–æ–¥–Ω–æ–µ –∑–∞—Ä—è–¥–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ", "≈Åadowarka bezprzewodowa", 49.99, "üîå", "electronics", "accessories", "hot-deals", 4.3, false, 15),
        createProduct("Power Bank", "–ü–æ—Ä—Ç–∞—Ç–∏–≤–Ω–∞—è –±–∞—Ç–∞—Ä–µ—è", "Power bank", 39.99, "üîã", "electronics", "accessories", "discounts", 4.4, false, 25),
        
        // Laptops subcategory
        createProduct("MacBook Pro M3", "MacBook Pro M3", "MacBook Pro M3", 1999.99, "üíª", "electronics", "laptops", "new-arrivals", 4.9, true, 0),
        createProduct("Dell XPS 13", "Dell XPS 13", "Dell XPS 13", 1299.99, "üíª", "electronics", "laptops", "recommended", 4.6, false, 8),
        createProduct("HP Spectre x360", "HP Spectre x360", "HP Spectre x360", 1199.99, "üíª", "electronics", "laptops", "discounts", 4.5, false, 12),
        createProduct("Lenovo ThinkPad X1", "Lenovo ThinkPad X1", "Lenovo ThinkPad X1", 1599.99, "üíª", "electronics", "laptops", "hot-deals", 4.7, false, 7),
        createProduct("ASUS ZenBook", "ASUS ZenBook", "ASUS ZenBook", 899.99, "üíª", "electronics", "laptops", "recommended", 4.2, false, 10),
                
                // Tablets subcategory
                createProduct("iPad Pro", "iPad Pro", "iPad Pro", 799.99, "üì±", "electronics", "tablets", "new-arrivals", 4.7, true, 0),
                createProduct("Samsung Galaxy Tab S9", "Samsung Galaxy Tab S9", "Samsung Galaxy Tab S9", 649.99, "üì±", "electronics", "tablets", "recommended", 4.5, false, 0),
                createProduct("Microsoft Surface Pro", "Microsoft Surface Pro", "Microsoft Surface Pro", 899.99, "üì±", "electronics", "tablets", "hot-deals", 4.4, false, 12),
                createProduct("Amazon Fire HD", "Amazon Fire HD", "Amazon Fire HD", 149.99, "üì±", "electronics", "tablets", "discounts", 4.1, false, 25),
                
                // Headphones subcategory
                createProduct("AirPods Pro", "AirPods Pro", "AirPods Pro", 249.99, "üéß", "electronics", "headphones", "recommended", 4.6, false, 0),
                createProduct("Sony WH-1000XM5", "Sony WH-1000XM5", "Sony WH-1000XM5", 399.99, "üéß", "electronics", "headphones", "new-arrivals", 4.8, true, 0),
                createProduct("Bose QuietComfort", "Bose QuietComfort", "Bose QuietComfort", 329.99, "üéß", "electronics", "headphones", "discounts", 4.5, false, 15),
                createProduct("JBL Live Pro", "JBL Live Pro", "JBL Live Pro", 199.99, "üéß", "electronics", "headphones", "hot-deals", 4.3, false, 20),
                
                // Cameras subcategory
                createProduct("Canon EOS R5", "Canon EOS R5", "Canon EOS R5", 2499.99, "üì∑", "electronics", "cameras", "new-arrivals", 4.8, true, 0),
                createProduct("Sony Alpha A7 IV", "Sony Alpha A7 IV", "Sony Alpha A7 IV", 2199.99, "üì∑", "electronics", "cameras", "recommended", 4.7, false, 5),
                createProduct("Nikon D850", "Nikon D850", "Nikon D850", 1899.99, "üì∑", "electronics", "cameras", "hot-deals", 4.6, false, 10),
                createProduct("Fujifilm X-T5", "Fujifilm X-T5", "Fujifilm X-T5", 1599.99, "üì∑", "electronics", "cameras", "discounts", 4.5, false, 15),
                createProduct("GoPro Hero 12", "GoPro Hero 12", "GoPro Hero 12", 399.99, "üìπ", "electronics", "cameras", "hot-deals", 4.4, false, 20),
                
                // Accessories subcategory
                createProduct("Phone Case", "–ß–µ—Ö–æ–ª –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "Etui na telefon", 29.99, "üì±", "electronics", "accessories", "recommended", 4.2, false, 0),
                createProduct("Wireless Charger", "–ë–µ—Å–ø—Ä–æ–≤–æ–¥–Ω–æ–µ –∑–∞—Ä—è–¥–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ", "≈Åadowarka bezprzewodowa", 49.99, "üîå", "electronics", "accessories", "hot-deals", 4.3, false, 15),
                createProduct("Phone Stand", "–ü–æ–¥—Å—Ç–∞–≤–∫–∞ –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "Stojak na telefon", 19.99, "üì±", "electronics", "accessories", "new-arrivals", 4.1, true, 0),
                createProduct("USB Cable", "USB –∫–∞–±–µ–ª—å", "Kabel USB", 14.99, "üîå", "electronics", "accessories", "recommended", 4.0, false, 0),
                createProduct("Power Bank", "–ü–æ—Ä—Ç–∞—Ç–∏–≤–Ω–∞—è –±–∞—Ç–∞—Ä–µ—è", "Power bank", 39.99, "üîã", "electronics", "accessories", "discounts", 4.4, false, 25),
                createProduct("Bluetooth Speaker", "Bluetooth –∫–æ–ª–æ–Ω–∫–∞", "G≈Ço≈õnik Bluetooth", 79.99, "üîä", "electronics", "accessories", "hot-deals", 4.5, false, 20),
        
        // FASHION CATEGORY (–û–¥–µ–∂–¥–∞)
        // Men's clothing subcategory (–ú—É–∂—Å–∫–∞—è –æ–¥–µ–∂–¥–∞)
        createProduct("Men's Winter Jacket", "–ú—É–∂—Å–∫–∞—è –∑–∏–º–Ω—è—è –∫—É—Ä—Ç–∫–∞", "Kurtka zimowa mƒôska", 159.99, "üß•", "fashion", "men", "hot-deals", 4.3, false, 25),
        createProduct("Men's Jeans", "–ú—É–∂—Å–∫–∏–µ –¥–∂–∏–Ω—Å—ã", "Jeansy mƒôskie", 79.99, "üëñ", "fashion", "men", "recommended", 4.2, false, 15),
        createProduct("Men's T-Shirt", "–ú—É–∂—Å–∫–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞", "Koszulka mƒôska", 29.99, "üëï", "fashion", "men", "recommended", 4.1, false, 0),
        createProduct("Men's Suit", "–ú—É–∂—Å–∫–æ–π –∫–æ—Å—Ç—é–º", "Garnitur mƒôski", 499.99, "ü§µ", "fashion", "men", "new-arrivals", 4.5, true, 0),
        createProduct("Men's Sweater", "–ú—É–∂—Å–∫–æ–π —Å–≤–∏—Ç–µ—Ä", "Sweter mƒôski", 89.99, "üß∂", "fashion", "men", "hot-deals", 4.3, false, 20),
        createProduct("Men's Polo Shirt", "–ú—É–∂—Å–∫–æ–µ –ø–æ–ª–æ", "Polo mƒôskie", 45.99, "üëî", "fashion", "men", "recommended", 4.2, false, 0),
        
        // Women's clothing subcategory (–ñ–µ–Ω—Å–∫–∞—è –æ–¥–µ–∂–¥–∞)
        createProduct("Women's Dress", "–ñ–µ–Ω—Å–∫–æ–µ –ø–ª–∞—Ç—å–µ", "Sukienka damska", 89.99, "üëó", "fashion", "women", "hot-deals", 4.4, false, 30),
        createProduct("Women's Blouse", "–ñ–µ–Ω—Å–∫–∞—è –±–ª—É–∑–∫–∞", "Bluzka damska", 59.99, "üëö", "fashion", "women", "new-arrivals", 4.2, true, 0),
        createProduct("Women's Coat", "–ñ–µ–Ω—Å–∫–æ–µ –ø–∞–ª—å—Ç–æ", "P≈Çaszcz damski", 249.99, "üß•", "fashion", "women", "hot-deals", 4.4, false, 18),
        createProduct("Women's Skirt", "–ñ–µ–Ω—Å–∫–∞—è —é–±–∫–∞", "Sp√≥dnica damska", 49.99, "üëó", "fashion", "women", "recommended", 4.1, false, 0),
        createProduct("Women's Cardigan", "–ñ–µ–Ω—Å–∫–∏–π –∫–∞—Ä–¥–∏–≥–∞–Ω", "Kardigan damski", 79.99, "üß•", "fashion", "women", "discounts", 4.3, false, 25),
        createProduct("Women's Jeans", "–ñ–µ–Ω—Å–∫–∏–µ –¥–∂–∏–Ω—Å—ã", "Jeansy damskie", 69.99, "üëñ", "fashion", "women", "recommended", 4.2, false, 0),
        
        // Kids clothing subcategory (–î–µ—Ç—Å–∫–∞—è –æ–¥–µ–∂–¥–∞)
        createProduct("Kids T-Shirt", "–î–µ—Ç—Å–∫–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞", "Koszulka dzieciƒôca", 19.99, "üëï", "fashion", "kids", "hot-deals", 4.1, false, 25),
        createProduct("Kids Winter Jacket", "–î–µ—Ç—Å–∫–∞—è –∑–∏–º–Ω—è—è –∫—É—Ä—Ç–∫–∞", "Kurtka zimowa dzieciƒôca", 79.99, "üß•", "fashion", "kids", "discounts", 4.2, false, 20),
        createProduct("Kids Dress", "–î–µ—Ç—Å–∫–æ–µ –ø–ª–∞—Ç—å–µ", "Sukienka dzieciƒôca", 34.99, "üëó", "fashion", "kids", "new-arrivals", 4.3, true, 0),
        createProduct("Kids Pants", "–î–µ—Ç—Å–∫–∏–µ —à—Ç–∞–Ω—ã", "Spodnie dzieciƒôce", 29.99, "üëñ", "fashion", "kids", "recommended", 4.0, false, 0),
        createProduct("Kids Sweater", "–î–µ—Ç—Å–∫–∏–π —Å–≤–∏—Ç–µ—Ä", "Sweter dzieciƒôcy", 39.99, "üß∂", "fashion", "kids", "hot-deals", 4.2, false, 15),
        createProduct("Kids School Uniform", "–î–µ—Ç—Å–∫–∞—è —à–∫–æ–ª—å–Ω–∞—è —Ñ–æ—Ä–º–∞", "Mundur szkolny dzieciƒôcy", 59.99, "üëî", "fashion", "kids", "new-arrivals", 4.1, true, 0),
        
        // Shoes subcategory (–û–±—É–≤—å)
        createProduct("Men's Sneakers", "–ú—É–∂—Å–∫–∏–µ –∫—Ä–æ—Å—Å–æ–≤–∫–∏", "Sneakersy mƒôskie", 149.99, "üëü", "fashion", "shoes", "new-arrivals", 4.6, true, 0),
        createProduct("Women's High Heels", "–ñ–µ–Ω—Å–∫–∏–µ —Ç—É—Ñ–ª–∏", "Buty na obcasie damskie", 119.99, "üë†", "fashion", "shoes", "discounts", 4.3, false, 20),
        createProduct("Kids Sneakers", "–î–µ—Ç—Å–∫–∏–µ –∫—Ä–æ—Å—Å–æ–≤–∫–∏", "Buty dzieciƒôce", 59.99, "üëü", "fashion", "shoes", "new-arrivals", 4.3, true, 0),
        createProduct("Men's Dress Shoes", "–ú—É–∂—Å–∫–∏–µ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ —Ç—É—Ñ–ª–∏", "Buty eleganckie mƒôskie", 189.99, "üëû", "fashion", "shoes", "recommended", 4.4, false, 0),
        createProduct("Women's Boots", "–ñ–µ–Ω—Å–∫–∏–µ —Å–∞–ø–æ–≥–∏", "Kozaki damskie", 159.99, "üë¢", "fashion", "shoes", "hot-deals", 4.5, false, 15),
        createProduct("Sports Shoes", "–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –∫—Ä–æ—Å—Å–æ–≤–∫–∏", "Buty sportowe", 129.99, "üëü", "fashion", "shoes", "recommended", 4.4, false, 0),
        
        // Bags subcategory (–°—É–º–∫–∏)
        createProduct("Women's Handbag", "–ñ–µ–Ω—Å–∫–∞—è —Å—É–º–∫–∞", "Torebka damska", 199.99, "üëú", "fashion", "bags", "recommended", 4.5, false, 0),
        createProduct("Kids Backpack", "–î–µ—Ç—Å–∫–∏–π —Ä—é–∫–∑–∞–∫", "Plecak dzieciƒôcy", 39.99, "üéí", "fashion", "bags", "recommended", 4.4, false, 0),
        createProduct("Men's Briefcase", "–ú—É–∂—Å–∫–æ–π –ø–æ—Ä—Ç—Ñ–µ–ª—å", "Teczka mƒôska", 249.99, "üíº", "fashion", "bags", "new-arrivals", 4.3, true, 0),
        createProduct("Travel Backpack", "–¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π —Ä—é–∫–∑–∞–∫", "Plecak turystyczny", 89.99, "üéí", "fashion", "bags", "hot-deals", 4.4, false, 20),
        createProduct("Women's Wallet", "–ñ–µ–Ω—Å–∫–∏–π –∫–æ—à–µ–ª–µ–∫", "Portfel damski", 49.99, "üëõ", "fashion", "bags", "recommended", 4.2, false, 0),
        createProduct("Laptop Bag", "–°—É–º–∫–∞ –¥–ª—è –Ω–æ—É—Ç–±—É–∫–∞", "Torba na laptopa", 69.99, "üíª", "fashion", "bags", "discounts", 4.3, false, 15),
        
        // Jewelry subcategory (–£–∫—Ä–∞—à–µ–Ω–∏—è)
        createProduct("Women's Jewelry", "–ñ–µ–Ω—Å–∫–∏–µ —É–∫—Ä–∞—à–µ–Ω–∏—è", "Bi≈ºuteria damska", 149.99, "üíé", "fashion", "jewelry", "recommended", 4.6, false, 0),
        createProduct("Men's Watch", "–ú—É–∂—Å–∫–∏–µ —á–∞—Å—ã", "Zegarek mƒôski", 299.99, "‚åö", "fashion", "jewelry", "discounts", 4.4, false, 20),
        createProduct("Gold Necklace", "–ó–æ–ª–æ—Ç–æ–µ –æ–∂–µ—Ä–µ–ª—å–µ", "Z≈Çoty naszyjnik", 399.99, "üìø", "fashion", "jewelry", "new-arrivals", 4.7, true, 0),
        createProduct("Silver Earrings", "–°–µ—Ä–µ–±—Ä—è–Ω—ã–µ —Å–µ—Ä—å–≥–∏", "Srebrne kolczyki", 89.99, "üíç", "fashion", "jewelry", "hot-deals", 4.3, false, 25),
        createProduct("Diamond Ring", "–ë—Ä–∏–ª–ª–∏–∞–Ω—Ç–æ–≤–æ–µ –∫–æ–ª—å—Ü–æ", "Pier≈õcionek z diamentem", 1299.99, "üíç", "fashion", "jewelry", "new-arrivals", 4.8, true, 0),
        createProduct("Pearl Bracelet", "–ñ–µ–º—á—É–∂–Ω—ã–π –±—Ä–∞—Å–ª–µ—Ç", "Bransoletka z pere≈Ç", 199.99, "üìø", "fashion", "jewelry", "recommended", 4.5, false, 0),
        
        // BEAUTY CATEGORY (–ö—Ä–∞—Å–æ—Ç–∞)
        // Makeup subcategory (–ú–∞–∫–∏—è–∂)
        createProduct("Foundation", "–¢–æ–Ω–∞–ª—å–Ω—ã–π –∫—Ä–µ–º", "Podk≈Çad", 39.99, "üíÑ", "beauty", "makeup", "recommended", 4.4, false, 0),
        createProduct("Lipstick", "–ü–æ–º–∞–¥–∞", "Szminka", 24.99, "üíã", "beauty", "makeup", "hot-deals", 4.3, false, 20),
        createProduct("Mascara", "–¢—É—à—å –¥–ª—è —Ä–µ—Å–Ω–∏—Ü", "Tusz do rzƒôs", 19.99, "üëÅÔ∏è", "beauty", "makeup", "new-arrivals", 4.5, true, 0),
        createProduct("Eyeshadow Palette", "–ü–∞–ª–µ—Ç–∫–∞ —Ç–µ–Ω–µ–π", "Paleta cieni", 49.99, "üé®", "beauty", "makeup", "recommended", 4.6, false, 0),
        createProduct("Concealer", "–ö–æ–Ω—Å–∏–ª–µ—Ä", "Korektor", 29.99, "‚ú®", "beauty", "makeup", "discounts", 4.2, false, 15),
        createProduct("Blush", "–†—É–º—è–Ω–∞", "R√≥≈º", 22.99, "üå∏", "beauty", "makeup", "hot-deals", 4.1, false, 25),
        
        // Skincare subcategory (–£—Ö–æ–¥ –∑–∞ –∫–æ–∂–µ–π)
        createProduct("Face Cleanser", "–û—á–∏—â–∞—é—â–µ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ", "≈ªel do mycia twarzy", 34.99, "üß¥", "beauty", "skincare", "recommended", 4.5, false, 0),
        createProduct("Moisturizer", "–£–≤–ª–∞–∂–Ω—è—é—â–∏–π –∫—Ä–µ–º", "Krem nawil≈ºajƒÖcy", 44.99, "üß¥", "beauty", "skincare", "new-arrivals", 4.6, true, 0),
        createProduct("Serum", "–°—ã–≤–æ—Ä–æ—Ç–∫–∞", "Serum", 59.99, "üíß", "beauty", "skincare", "hot-deals", 4.7, false, 10),
        createProduct("Sunscreen", "–°–æ–ª–Ω—Ü–µ–∑–∞—â–∏—Ç–Ω—ã–π –∫—Ä–µ–º", "Krem z filtrem", 29.99, "‚òÄÔ∏è", "beauty", "skincare", "recommended", 4.3, false, 0),
        createProduct("Eye Cream", "–ö—Ä–µ–º –¥–ª—è –≥–ª–∞–∑", "Krem pod oczy", 39.99, "üëÅÔ∏è", "beauty", "skincare", "discounts", 4.4, false, 20),
        createProduct("Face Mask", "–ú–∞—Å–∫–∞ –¥–ª—è –ª–∏—Ü–∞", "Maska do twarzy", 19.99, "üòä", "beauty", "skincare", "hot-deals", 4.2, false, 15),
        
        // Haircare subcategory (–£—Ö–æ–¥ –∑–∞ –≤–æ–ª–æ—Å–∞–º–∏)
        createProduct("Shampoo", "–®–∞–º–ø—É–Ω—å", "Szampon", 24.99, "üß¥", "beauty", "haircare", "recommended", 4.3, false, 0),
        createProduct("Conditioner", "–ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä", "Od≈ºywka", 22.99, "üß¥", "beauty", "haircare", "recommended", 4.2, false, 0),
        createProduct("Hair Mask", "–ú–∞—Å–∫–∞ –¥–ª—è –≤–æ–ª–æ—Å", "Maska do w≈Ços√≥w", 34.99, "üíÜ", "beauty", "haircare", "new-arrivals", 4.5, true, 0),
        createProduct("Hair Oil", "–ú–∞—Å–ª–æ –¥–ª—è –≤–æ–ª–æ—Å", "Olejek do w≈Ços√≥w", 29.99, "üíß", "beauty", "haircare", "hot-deals", 4.4, false, 20),
        createProduct("Hair Spray", "–õ–∞–∫ –¥–ª—è –≤–æ–ª–æ—Å", "Lakier do w≈Ços√≥w", 16.99, "üí®", "beauty", "haircare", "recommended", 4.1, false, 0),
        createProduct("Dry Shampoo", "–°—É—Ö–æ–π —à–∞–º–ø—É–Ω—å", "Suchy szampon", 18.99, "üå™Ô∏è", "beauty", "haircare", "discounts", 4.0, false, 25),
        
        // Perfume subcategory (–ü–∞—Ä—Ñ—é–º–µ—Ä–∏—è)
        createProduct("Women's Perfume", "–ñ–µ–Ω—Å–∫–∏–µ –¥—É—Ö–∏", "Perfumy damskie", 89.99, "üå∏", "beauty", "perfume", "new-arrivals", 4.6, true, 0),
        createProduct("Men's Cologne", "–ú—É–∂—Å–∫–æ–π –æ–¥–µ–∫–æ–ª–æ–Ω", "Woda kolo≈Ñska mƒôska", 79.99, "üèîÔ∏è", "beauty", "perfume", "recommended", 4.5, false, 0),
        createProduct("Body Spray", "–°–ø—Ä–µ–π –¥–ª—è —Ç–µ–ª–∞", "Mgie≈Çka do cia≈Ça", 24.99, "üí®", "beauty", "perfume", "hot-deals", 4.2, false, 30),
        createProduct("Perfume Set", "–ù–∞–±–æ—Ä –¥—É—Ö–æ–≤", "Zestaw perfum", 149.99, "üéÅ", "beauty", "perfume", "new-arrivals", 4.7, true, 0),
        createProduct("Unisex Fragrance", "–£–Ω–∏—Å–µ–∫—Å –∞—Ä–æ–º–∞—Ç", "Zapach unisex", 69.99, "üåø", "beauty", "perfume", "recommended", 4.3, false, 0),
        createProduct("Travel Size Perfume", "–î–æ—Ä–æ–∂–Ω—ã–µ –¥—É—Ö–∏", "Perfumy podr√≥≈ºne", 39.99, "‚úàÔ∏è", "beauty", "perfume", "discounts", 4.1, false, 20),
        
        // HOME CATEGORY
        // Furniture subcategory
        createProduct("Modern Sofa Set", "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–≤–∞–Ω", "Nowoczesny zestaw mebli", 899.99, "üõãÔ∏è", "home", "furniture", "recommended", 4.2, false, 10),
        createProduct("Dining Table", "–û–±–µ–¥–µ–Ω–Ω—ã–π —Å—Ç–æ–ª", "St√≥≈Ç jadalny", 599.99, "ü™ë", "home", "furniture", "hot-deals", 4.4, false, 15),
        createProduct("Wardrobe", "–®–∫–∞—Ñ", "Szafa", 499.99, "üóÑÔ∏è", "home", "furniture", "discounts", 4.1, false, 25),
        createProduct("Office Chair", "–û—Ñ–∏—Å–Ω–æ–µ –∫—Ä–µ—Å–ª–æ", "Krzes≈Ço biurowe", 299.99, "ü™ë", "home", "furniture", "new-arrivals", 4.3, true, 0),
        createProduct("Bookshelf", "–ö–Ω–∏–∂–Ω–∞—è –ø–æ–ª–∫–∞", "Rega≈Ç na ksiƒÖ≈ºki", 179.99, "üìö", "home", "furniture", "recommended", 4.0, false, 0),
        createProduct("TV Stand", "–¢—É–º–±–∞ –ø–æ–¥ –¢–í", "Szafka RTV", 159.99, "üì∫", "home", "furniture", "hot-deals", 4.2, false, 12),
                
                // Kitchen subcategory
                createProduct("Coffee Machine", "–ö–æ—Ñ–µ–º–∞—à–∏–Ω–∞", "Ekspres do kawy", 299.99, "‚òï", "home", "kitchen", "new-arrivals", 4.7, true, 0),
                createProduct("Blender", "–ë–ª–µ–Ω–¥–µ—Ä", "Blender", 79.99, "ü•§", "home", "kitchen", "hot-deals", 4.3, false, 20),
                createProduct("Microwave", "–ú–∏–∫—Ä–æ–≤–æ–ª–Ω–æ–≤–∫–∞", "Kuchenka mikrofalowa", 149.99, "üì°", "home", "kitchen", "recommended", 4.2, false, 5),
                createProduct("Air Fryer", "–ê—ç—Ä–æ–≥—Ä–∏–ª—å", "Frytkownica bezt≈Çuszczowa", 129.99, "üçü", "home", "kitchen", "hot-deals", 4.5, false, 15),
                createProduct("Stand Mixer", "–ú–∏–∫—Å–µ—Ä", "Mikser stojƒÖcy", 249.99, "ü•Ñ", "home", "kitchen", "discounts", 4.4, false, 20),
                createProduct("Dishwasher", "–ü–æ—Å—É–¥–æ–º–æ–µ—á–Ω–∞—è –º–∞—à–∏–Ω–∞", "Zmywarka", 599.99, "üçΩÔ∏è", "home", "kitchen", "new-arrivals", 4.6, true, 0),
                
                // Bathroom subcategory (–í–∞–Ω–Ω–∞—è)
                createProduct("Shower Head", "–î—É—à–µ–≤–∞—è –ª–µ–π–∫–∞", "S≈Çuchawka prysznicowa", 89.99, "üöø", "home", "bathroom", "new-arrivals", 4.4, true, 0),
                createProduct("Towel Set", "–ù–∞–±–æ—Ä –ø–æ–ª–æ—Ç–µ–Ω–µ—Ü", "Zestaw rƒôcznik√≥w", 49.99, "üõÅ", "home", "bathroom", "recommended", 4.3, false, 0),
                createProduct("Bathroom Mirror", "–ó–µ—Ä–∫–∞–ª–æ –¥–ª—è –≤–∞–Ω–Ω–æ–π", "Lustro ≈Çazienkowe", 129.99, "ü™û", "home", "bathroom", "hot-deals", 4.2, false, 15),
                createProduct("Toilet Paper Holder", "–î–µ—Ä–∂–∞—Ç–µ–ª—å –¥–ª—è —Ç—É–∞–ª–µ—Ç–Ω–æ–π –±—É–º–∞–≥–∏", "Uchwyt na papier toaletowy", 29.99, "üßª", "home", "bathroom", "recommended", 4.1, false, 0),
                createProduct("Bathroom Scale", "–í–µ—Å—ã –¥–ª—è –≤–∞–Ω–Ω–æ–π", "Waga ≈Çazienkowa", 59.99, "‚öñÔ∏è", "home", "bathroom", "discounts", 4.0, false, 20),
                createProduct("Soap Dispenser", "–î–æ–∑–∞—Ç–æ—Ä –¥–ª—è –º—ã–ª–∞", "Dozownik myd≈Ça", 24.99, "üß¥", "home", "bathroom", "hot-deals", 4.2, false, 25),
                createProduct("Bath Mat", "–ö–æ–≤—Ä–∏–∫ –¥–ª—è –≤–∞–Ω–Ω–æ–π", "Mata ≈Çazienkowa", 34.99, "üõÅ", "home", "bathroom", "recommended", 4.1, false, 0),
                createProduct("Shower Curtain", "–®—Ç–æ—Ä–∫–∞ –¥–ª—è –¥—É—à–∞", "Zas≈Çona prysznicowa", 39.99, "üöø", "home", "bathroom", "new-arrivals", 4.3, true, 0),
                createProduct("Bathroom Cabinet", "–®–∫–∞—Ñ—á–∏–∫ –¥–ª—è –≤–∞–Ω–Ω–æ–π", "Szafka ≈Çazienkowa", 199.99, "üóÑÔ∏è", "home", "bathroom", "recommended", 4.4, false, 0),
                createProduct("Toothbrush Holder", "–î–µ—Ä–∂–∞—Ç–µ–ª—å –¥–ª—è –∑—É–±–Ω—ã—Ö —â–µ—Ç–æ–∫", "Uchwyt na szczoteczki", 19.99, "ü¶∑", "home", "bathroom", "hot-deals", 4.0, false, 30),

                // Garden & Tools subcategory (–°–∞–¥ –∏ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã)
                createProduct("Garden Hose", "–°–∞–¥–æ–≤—ã–π —à–ª–∞–Ω–≥", "WƒÖ≈º ogrodowy", 79.99, "üöø", "home", "garden", "recommended", 4.3, false, 0),
                createProduct("Lawn Mower", "–ì–∞–∑–æ–Ω–æ–∫–æ—Å–∏–ª–∫–∞", "Kosiarka do trawy", 599.99, "üöú", "home", "garden", "new-arrivals", 4.5, true, 0),
                createProduct("Pruning Shears", "–°–µ–∫–∞—Ç–æ—Ä", "Sekator", 39.99, "‚úÇÔ∏è", "home", "garden", "hot-deals", 4.2, false, 15),
                createProduct("Watering Can", "–õ–µ–π–∫–∞", "Konewka", 24.99, "üö∞", "home", "garden", "recommended", 4.1, false, 0),
                createProduct("Garden Gloves", "–°–∞–¥–æ–≤—ã–µ –ø–µ—Ä—á–∞—Ç–∫–∏", "Rƒôkawice ogrodowe", 19.99, "üß§", "home", "garden", "hot-deals", 4.0, false, 20),
                createProduct("Flower Pots Set", "–ù–∞–±–æ—Ä —Ü–≤–µ—Ç–æ—á–Ω—ã—Ö –≥–æ—Ä—à–∫–æ–≤", "Zestaw doniczek", 49.99, "ü™¥", "home", "garden", "recommended", 4.4, false, 0),
                createProduct("Garden Spade", "–°–∞–¥–æ–≤–∞—è –ª–æ–ø–∞—Ç–∞", "≈Åopata ogrodowa", 34.99, "üî®", "home", "garden", "discounts", 4.2, false, 25),
                createProduct("Hedge Trimmer", "–ö—É—Å—Ç–æ—Ä–µ–∑", "No≈ºyce do ≈ºywop≈Çotu", 199.99, "üîß", "home", "garden", "new-arrivals", 4.6, true, 0),
                createProduct("Garden Fertilizer", "–°–∞–¥–æ–≤–æ–µ —É–¥–æ–±—Ä–µ–Ω–∏–µ", "Naw√≥z ogrodowy", 29.99, "üå±", "home", "garden", "recommended", 4.3, false, 0),
                createProduct("Wheelbarrow", "–¢–∞—á–∫–∞", "Taczka", 149.99, "üõû", "home", "garden", "hot-deals", 4.4, false, 10),
                createProduct("Garden Rake", "–°–∞–¥–æ–≤—ã–µ –≥—Ä–∞–±–ª–∏", "Grabie ogrodowe", 27.99, "üî®", "home", "garden", "recommended", 4.1, false, 0),
                createProduct("Plant Seeds Set", "–ù–∞–±–æ—Ä —Å–µ–º—è–Ω —Ä–∞—Å—Ç–µ–Ω–∏–π", "Zestaw nasion ro≈õlin", 14.99, "üå±", "home", "garden", "new-arrivals", 4.2, true, 0),
                createProduct("Garden Hoe", "–°–∞–¥–æ–≤–∞—è –º–æ—Ç—ã–≥–∞", "Motyka ogrodowa", 32.99, "üî®", "home", "garden", "discounts", 4.0, false, 15),
                createProduct("Sprinkler System", "–°–∏—Å—Ç–µ–º–∞ –ø–æ–ª–∏–≤–∞", "System nawadniania", 299.99, "üíß", "home", "garden", "new-arrivals", 4.7, true, 0),
        
        // Decor subcategory
        createProduct("Wall Art Canvas", "–ù–∞—Å—Ç–µ–Ω–Ω–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ", "Obraz na p≈Ç√≥tnie", 89.99, "üñºÔ∏è", "home", "decor", "new-arrivals", 4.1, true, 0),
        createProduct("Modern Table Lamp", "–ù–∞—Å—Ç–æ–ª—å–Ω–∞—è –ª–∞–º–ø–∞", "Nowoczesna lampa sto≈Çowa", 69.99, "üí°", "home", "decor", "recommended", 4.2, false, 0),
        createProduct("Decorative Vase", "–î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω–∞—è –≤–∞–∑–∞", "Wazon dekoracyjny", 39.99, "üè∫", "home", "decor", "hot-deals", 4.0, false, 30),
        createProduct("Throw Pillows", "–î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –ø–æ–¥—É—à–∫–∏", "Poduszki dekoracyjne", 24.99, "üõèÔ∏è", "home", "decor", "discounts", 4.1, false, 25),
        createProduct("Wall Mirror", "–ù–∞—Å—Ç–µ–Ω–Ω–æ–µ –∑–µ—Ä–∫–∞–ª–æ", "Lustro ≈õcienne", 129.99, "ü™û", "home", "decor", "recommended", 4.3, false, 0),
                
                // SPORTS CATEGORY
                // Equipment subcategory (–ø–µ—Ä–µ–∏–º–µ–Ω—É–µ–º –≤ –§–∏—Ç–Ω–µ—Å)
                createProduct("Yoga Mat", "–ö–æ–≤—Ä–∏–∫ –¥–ª—è –π–æ–≥–∏", "Mata do jogi", 29.99, "üßò", "sports", "fitness", "recommended", 4.1, false, 0),
                createProduct("Dumbbells Set", "–ù–∞–±–æ—Ä –≥–∞–Ω—Ç–µ–ª–µ–π", "Zestaw hantli", 199.99, "üèãÔ∏è", "sports", "fitness", "hot-deals", 4.5, false, 15),
                createProduct("Treadmill", "–ë–µ–≥–æ–≤–∞—è –¥–æ—Ä–æ–∂–∫–∞", "Bie≈ºnia", 899.99, "üèÉ", "sports", "fitness", "new-arrivals", 4.3, true, 0),
                createProduct("Exercise Bike", "–í–µ–ª–æ—Ç—Ä–µ–Ω–∞–∂–µ—Ä", "Rower stacjonarny", 699.99, "üö¥", "sports", "fitness", "recommended", 4.4, false, 0),
                createProduct("Resistance Bands", "–†–µ–∑–∏–Ω–∫–∏ –¥–ª—è —Ñ–∏—Ç–Ω–µ—Å–∞", "Ta≈õmy oporowe", 39.99, "üí™", "sports", "fitness", "hot-deals", 4.2, false, 20),
                createProduct("Kettlebell", "–ì–∏—Ä—è", "Kettlebell", 79.99, "üèãÔ∏è", "sports", "fitness", "discounts", 4.3, false, 15),
                createProduct("Pull-up Bar", "–¢—É—Ä–Ω–∏–∫", "DrƒÖ≈ºek do podciƒÖgania", 89.99, "üí™", "sports", "fitness", "new-arrivals", 4.1, true, 0),
                createProduct("Protein Shaker", "–®–µ–π–∫–µ—Ä –¥–ª—è –ø—Ä–æ—Ç–µ–∏–Ω–∞", "Shaker na bia≈Çko", 24.99, "ü•§", "sports", "fitness", "recommended", 4.0, false, 0),

                // –ê–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö subcategory
                createProduct("Bicycle", "–í–µ–ª–æ—Å–∏–ø–µ–¥", "Rower", 599.99, "üö≤", "sports", "outdoor", "discounts", 4.6, false, 25),
                createProduct("Camping Tent", "–ü–∞–ª–∞—Ç–∫–∞", "Namiot kempingowy", 249.99, "‚õ∫", "sports", "outdoor", "new-arrivals", 4.4, true, 0),
                createProduct("Hiking Backpack", "–¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π —Ä—é–∫–∑–∞–∫", "Plecak turystyczny", 129.99, "üéí", "sports", "outdoor", "recommended", 4.3, false, 0),
                createProduct("Sleeping Bag", "–°–ø–∞–ª—å–Ω—ã–π –º–µ—à–æ–∫", "≈öpiw√≥r", 89.99, "üõèÔ∏è", "sports", "outdoor", "hot-deals", 4.2, false, 20),
                createProduct("Camping Stove", "–ü–æ—Ö–æ–¥–Ω–∞—è –ø–ª–∏—Ç–∞", "Kuchenka turystyczna", 79.99, "üî•", "sports", "outdoor", "recommended", 4.1, false, 0),
                createProduct("Thermos", "–¢–µ—Ä–º–æ—Å", "Termos", 49.99, "üçµ", "sports", "outdoor", "discounts", 4.0, false, 15),
                createProduct("Compass", "–ö–æ–º–ø–∞—Å", "Kompas", 34.99, "üß≠", "sports", "outdoor", "new-arrivals", 4.2, true, 0),
                createProduct("Headlamp", "–ù–∞–ª–æ–±–Ω—ã–π —Ñ–æ–Ω–∞—Ä—å", "Latarka czo≈Çowa", 59.99, "üí°", "sports", "outdoor", "hot-deals", 4.3, false, 25),

                // –ö–æ–º–∞–Ω–¥–Ω—ã–µ –≤–∏–¥—ã subcategory
                createProduct("Basketball", "–ë–∞—Å–∫–µ—Ç–±–æ–ª—å–Ω—ã–π –º—è—á", "Pi≈Çka do koszyk√≥wki", 49.99, "üèÄ", "sports", "team", "recommended", 4.2, false, 0),
                createProduct("Soccer Ball", "–§—É—Ç–±–æ–ª—å–Ω—ã–π –º—è—á", "Pi≈Çka no≈ºna", 39.99, "‚öΩ", "sports", "team", "hot-deals", 4.4, false, 15),
                createProduct("Volleyball", "–í–æ–ª–µ–π–±–æ–ª—å–Ω—ã–π –º—è—á", "Pi≈Çka siatkowa", 34.99, "üèê", "sports", "team", "recommended", 4.1, false, 0),
                createProduct("Tennis Racket", "–¢–µ–Ω–Ω–∏—Å–Ω–∞—è —Ä–∞–∫–µ—Ç–∫–∞", "Rakieta tenisowa", 129.99, "üéæ", "sports", "team", "new-arrivals", 4.4, true, 0),
                createProduct("Badminton Set", "–ù–∞–±–æ—Ä –¥–ª—è –±–∞–¥–º–∏–Ω—Ç–æ–Ω–∞", "Zestaw do badmintona", 89.99, "üè∏", "sports", "team", "discounts", 4.3, false, 20),
                createProduct("Hockey Stick", "–•–æ–∫–∫–µ–π–Ω–∞—è –∫–ª—é—à–∫–∞", "Kij hokejowy", 159.99, "üèí", "sports", "team", "new-arrivals", 4.5, true, 0),
                createProduct("Rugby Ball", "–ú—è—á –¥–ª—è —Ä–µ–≥–±–∏", "Pi≈Çka rugby", 44.99, "üèâ", "sports", "team", "recommended", 4.2, false, 0),
                createProduct("Table Tennis Paddle", "–†–∞–∫–µ—Ç–∫–∞ –¥–ª—è –Ω–∞—Å—Ç–æ–ª—å–Ω–æ–≥–æ —Ç–µ–Ω–Ω–∏—Å–∞", "Rakietka do ping-ponga", 29.99, "üèì", "sports", "team", "hot-deals", 4.0, false, 30),

                // –í–æ–¥–Ω—ã–µ –≤–∏–¥—ã subcategory
                createProduct("Swimming Goggles", "–û—á–∫–∏ –¥–ª—è –ø–ª–∞–≤–∞–Ω–∏—è", "Okulary p≈Çywackie", 24.99, "ü•Ω", "sports", "water", "recommended", 4.2, false, 0),
                createProduct("Swimming Suit", "–ö—É–ø–∞–ª—å–Ω–∏–∫", "Str√≥j kƒÖpielowy", 49.99, "üèä", "sports", "water", "recommended", 4.1, false, 0),
                createProduct("Surfboard", "–î–æ—Å–∫–∞ –¥–ª—è —Å–µ—Ä—Ñ–∏–Ω–≥–∞", "Deska surfingowa", 899.99, "üèÑ", "sports", "water", "new-arrivals", 4.6, true, 0),
                createProduct("Diving Mask", "–ú–∞—Å–∫–∞ –¥–ª—è –¥–∞–π–≤–∏–Ω–≥–∞", "Maska do nurkowania", 89.99, "ü§ø", "sports", "water", "hot-deals", 4.4, false, 15),
                createProduct("Kayak Paddle", "–í–µ—Å–ª–æ –¥–ª—è –∫–∞—è–∫–∞", "Wios≈Ço do kajaka", 159.99, "üõ∂", "sports", "water", "recommended", 4.3, false, 0),
                createProduct("Life Jacket", "–°–ø–∞—Å–∞—Ç–µ–ª—å–Ω—ã–π –∂–∏–ª–µ—Ç", "Kamizelka ratunkowa", 79.99, "ü¶∫", "sports", "water", "discounts", 4.1, false, 20),
                createProduct("Snorkel Set", "–ù–∞–±–æ—Ä –¥–ª—è —Å–Ω–æ—Ä–∫–ª–∏–Ω–≥–∞", "Zestaw do snorkelingu", 69.99, "ü§ø", "sports", "water", "new-arrivals", 4.2, true, 0),
                createProduct("Waterproof Phone Case", "–í–æ–¥–æ–Ω–µ–ø—Ä–æ–Ω–∏—Ü–∞–µ–º—ã–π —á–µ—Ö–æ–ª", "Wodoodporne etui na telefon", 19.99, "üì±", "sports", "water", "hot-deals", 4.0, false, 25),

                // Clothing subcategory (—Å–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –æ–¥–µ–∂–¥–∞)
                createProduct("Running Shoes", "–ë–µ–≥–æ–≤—ã–µ –∫—Ä–æ—Å—Å–æ–≤–∫–∏", "Buty do biegania", 159.99, "üëü", "sports", "clothing", "recommended", 4.6, false, 10),
                createProduct("Sports T-shirt", "–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞", "Koszulka sportowa", 39.99, "üëï", "sports", "clothing", "hot-deals", 4.2, false, 25),
                createProduct("Yoga Pants", "–®—Ç–∞–Ω—ã –¥–ª—è –π–æ–≥–∏", "Spodnie do jogi", 69.99, "ü©±", "sports", "clothing", "discounts", 4.3, false, 30),
                createProduct("Sports Jacket", "–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –∫—É—Ä—Ç–∫–∞", "Kurtka sportowa", 89.99, "üß•", "sports", "clothing", "new-arrivals", 4.4, true, 0),
                createProduct("Fitness Shorts", "–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —à–æ—Ä—Ç—ã", "Spodenki sportowe", 34.99, "ü©≥", "sports", "clothing", "hot-deals", 4.2, false, 20),
                createProduct("Sports Bra", "–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –ª–∏—Ñ—á–∏–∫", "Biustonosz sportowy", 44.99, "üëô", "sports", "clothing", "recommended", 4.1, false, 0),

                // BOOKS CATEGORY
                // Fiction subcategory
                createProduct("Mystery Novel", "–î–µ—Ç–µ–∫—Ç–∏–≤–Ω—ã–π —Ä–æ–º–∞–Ω", "Powie≈õƒá kryminalna", 14.99, "üìö", "books", "fiction", "new-arrivals", 4.3, true, 0),
                createProduct("Science Fiction", "–ù–∞—É—á–Ω–∞—è —Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞", "Fantastyka naukowa", 16.99, "üìñ", "books", "fiction", "recommended", 4.5, false, 0),
                createProduct("Romance Novel", "–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π —Ä–æ–º–∞–Ω", "Romans", 12.99, "üíï", "books", "fiction", "hot-deals", 4.2, false, 20),
                createProduct("Thriller", "–¢—Ä–∏–ª–ª–µ—Ä", "Thriller", 15.99, "üò±", "books", "fiction", "discounts", 4.4, false, 15),
                createProduct("Fantasy Adventure", "–§—ç–Ω—Ç–µ–∑–∏ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è", "Przygoda fantasy", 18.99, "üó°Ô∏è", "books", "fiction", "new-arrivals", 4.6, true, 0),
                
                // Non-fiction subcategory
                createProduct("Self-Help Book", "–ö–Ω–∏–≥–∞ –ø–æ —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏—é", "KsiƒÖ≈ºka motywacyjna", 19.99, "üìñ", "books", "non-fiction", "recommended", 4.4, false, 0),
                createProduct("Cookbook", "–ü–æ–≤–∞—Ä–µ–Ω–Ω–∞—è –∫–Ω–∏–≥–∞", "KsiƒÖ≈ºka kucharska", 24.99, "üë®‚Äçüç≥", "books", "non-fiction", "hot-deals", 4.2, false, 15),
                createProduct("Biography", "–ë–∏–æ–≥—Ä–∞—Ñ–∏—è", "Biografia", 21.99, "üë§", "books", "non-fiction", "new-arrivals", 4.5, true, 0),

                // Education subcategory (–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ)
                createProduct("Programming Guide", "–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é", "Przewodnik programowania", 34.99, "üíª", "books", "education", "new-arrivals", 4.7, true, 0),
                createProduct("Mathematics Textbook", "–£—á–µ–±–Ω–∏–∫ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏", "Podrƒôcznik matematyki", 29.99, "üìä", "books", "education", "recommended", 4.5, false, 0),
                createProduct("English Grammar", "–ì—Ä–∞–º–º–∞—Ç–∏–∫–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞", "Gramatyka angielska", 24.99, "üìù", "books", "education", "hot-deals", 4.3, false, 15),
                createProduct("Physics Study Guide", "–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –ø–æ —Ñ–∏–∑–∏–∫–µ", "Podrƒôcznik fizyki", 32.99, "üî¨", "books", "education", "recommended", 4.4, false, 0),
                createProduct("History Atlas", "–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –∞—Ç–ª–∞—Å", "Atlas historyczny", 39.99, "üåç", "books", "education", "discounts", 4.2, false, 20),
                createProduct("Chemistry Handbook", "–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –ø–æ —Ö–∏–º–∏–∏", "Podrƒôcznik chemii", 28.99, "‚öóÔ∏è", "books", "education", "new-arrivals", 4.6, true, 0),
                createProduct("Art History", "–ò—Å—Ç–æ—Ä–∏—è –∏—Å–∫—É—Å—Å—Ç–≤–∞", "Historia sztuki", 44.99, "üé®", "books", "education", "recommended", 4.3, false, 0),
                createProduct("Language Learning Set", "–ù–∞–±–æ—Ä –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è —è–∑—ã–∫–æ–≤", "Zestaw do nauki jƒôzyk√≥w", 49.99, "üó£Ô∏è", "books", "education", "hot-deals", 4.5, false, 10),

                // Children's Books subcategory (–î–µ—Ç—Å–∫–∏–µ –∫–Ω–∏–≥–∏)
                createProduct("Fairy Tales Collection", "–°–±–æ—Ä–Ω–∏–∫ —Å–∫–∞–∑–æ–∫", "Zbi√≥r bajek", 19.99, "üßö", "books", "children", "recommended", 4.4, false, 0),
                createProduct("Kids Adventure Book", "–î–µ—Ç—Å–∫–∞—è –ø—Ä–∏–∫–ª—é—á–µ–Ω—á–µ—Å–∫–∞—è –∫–Ω–∏–≥–∞", "KsiƒÖ≈ºka przygodowa dla dzieci", 16.99, "üöÄ", "books", "children", "new-arrivals", 4.3, true, 0),
                createProduct("ABC Learning Book", "–ë—É–∫–≤–∞—Ä—å", "KsiƒÖ≈ºka do nauki alfabetu", 14.99, "üî§", "books", "children", "hot-deals", 4.2, false, 25),
                createProduct("Picture Book Animals", "–ö–Ω–∏–≥–∞ —Å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏ –ø—Ä–æ –∂–∏–≤–æ—Ç–Ω—ã—Ö", "KsiƒÖ≈ºka obrazkowa o zwierzƒôtach", 18.99, "üêæ", "books", "children", "recommended", 4.5, false, 0),
                createProduct("Bedtime Stories", "–°–∫–∞–∑–∫–∏ –Ω–∞ –Ω–æ—á—å", "Bajki na dobranoc", 22.99, "üåô", "books", "children", "discounts", 4.1, false, 15),
                createProduct("Children's Encyclopedia", "–î–µ—Ç—Å–∫–∞—è —ç–Ω—Ü–∏–∫–ª–æ–ø–µ–¥–∏—è", "Encyklopedia dla dzieci", 34.99, "üìö", "books", "children", "new-arrivals", 4.6, true, 0),
                createProduct("Coloring Activity Book", "–†–∞—Å–∫—Ä–∞—Å–∫–∞", "Kolorowanka", 12.99, "üñçÔ∏è", "books", "children", "hot-deals", 4.0, false, 30),
                createProduct("Kids Science Fun", "–ó–∞–Ω–∏–º–∞—Ç–µ–ª—å–Ω–∞—è –Ω–∞—É–∫–∞ –¥–ª—è –¥–µ—Ç–µ–π", "Zabawna nauka dla dzieci", 26.99, "üî¨", "books", "children", "recommended", 4.4, false, 0),

                // Business subcategory (–ë–∏–∑–Ω–µ—Å)
                createProduct("Business Strategy Guide", "–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –±–∏–∑–Ω–µ—Å-—Å—Ç—Ä–∞—Ç–µ–≥–∏–∏", "Przewodnik strategii biznesowej", 39.99, "üìà", "books", "business", "new-arrivals", 4.6, true, 0),
                createProduct("Marketing Fundamentals", "–û—Å–Ω–æ–≤—ã –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞", "Podstawy marketingu", 34.99, "üìä", "books", "business", "recommended", 4.5, false, 0),
                createProduct("Financial Management", "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç", "ZarzƒÖdzanie finansami", 42.99, "üí∞", "books", "business", "hot-deals", 4.4, false, 12),
                createProduct("Leadership Skills", "–ù–∞–≤—ã–∫–∏ –ª–∏–¥–µ—Ä—Å—Ç–≤–∞", "Umiejƒôtno≈õci przyw√≥dcze", 29.99, "üëî", "books", "business", "recommended", 4.3, false, 0),
                createProduct("Startup Handbook", "–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —Å—Ç–∞—Ä—Ç–∞–ø–µ—Ä–∞", "Poradnik dla startup√≥w", 36.99, "üöÄ", "books", "business", "discounts", 4.7, false, 18),
                createProduct("Investment Guide", "–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è–º", "Przewodnik inwestycyjny", 44.99, "üíπ", "books", "business", "new-arrivals", 4.5, true, 0),
                createProduct("Project Management", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏", "ZarzƒÖdzanie projektami", 38.99, "üìã", "books", "business", "recommended", 4.4, false, 0),
                createProduct("Digital Transformation", "–¶–∏—Ñ—Ä–æ–≤–∞—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è", "Transformacja cyfrowa", 41.99, "üíª", "books", "business", "hot-deals", 4.6, false, 15)

    );

    try {
        productRepository.saveAll(products);
        System.out.println("Successfully initialized " + products.size() + " products in MongoDB sklep database");
    } catch (Exception e) {
        System.err.println("Error saving products to MongoDB sklep database: " + e.getMessage());
        throw e;
    }
}

private void initializeUserProfileData() {
        try {
            System.out.println("Initializing user profile data...");
            
            // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            User testUser = createTestUser();
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            initializeOrdersForUser(testUser);
            initializeReceiptsForUser(testUser);
            initializeReviewsForUser(testUser);
            initializeComplaintsForUser(testUser);
            initializeDiscountsForUser(testUser);
            initializeReturnsForUser(testUser);
            
            System.out.println("Successfully initialized user profile data!");
            
        } catch (Exception e) {
            System.err.println("Error initializing user profile data: " + e.getMessage());
            e.printStackTrace();
        }
    }
      private User createTestUser() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        Optional<User> existingUser = userRepository.findByEmail("test@example.com");
        if (existingUser.isPresent()) {
            System.out.println("Test user already exists, using existing user");
            return existingUser.get();
        }
        
        User testUser = new User();
        testUser.setFirstName("John");
        testUser.setLastName("Doe");
        testUser.setEmail("test@example.com");
        testUser.setPassword("$2a$10$N.zmdrJ.oOJQQFPTx4B1Oe"); // password: "password"
        testUser.setPhoneNumber("+1234567890");
        testUser.setRole(UserRole.CUSTOMER);
        testUser.setIsActive(true);
        testUser.setEmailVerified(true);
        testUser.setCreatedAt(LocalDateTime.now());
        testUser.setProvider("local");
        
        testUser = userRepository.save(testUser);
        System.out.println("Created test user with ID: " + testUser.getId());
        return testUser;
    }
      private void initializeOrdersForUser(User user) {
        List<Order> existingOrders = orderRepository.findByUserIdOrderByOrderDateDesc(user.getId());
        if (existingOrders.isEmpty()) {
            List<Order> orders = Arrays.asList(
                createOrder(user, "ORD-2024-001", OrderStatus.DELIVERED, new BigDecimal("299.99"), LocalDateTime.now().minusDays(15)),
                createOrder(user, "ORD-2024-002", OrderStatus.SHIPPED, new BigDecimal("149.50"), LocalDateTime.now().minusDays(3)),
                createOrder(user, "ORD-2024-003", OrderStatus.PENDING, new BigDecimal("89.99"), LocalDateTime.now().minusHours(6))
            );
            orderRepository.saveAll(orders);
            System.out.println("Initialized " + orders.size() + " orders for user");
        }
    }
      private void initializeReceiptsForUser(User user) {
        List<Order> userOrders = orderRepository.findByUserIdOrderByOrderDateDesc(user.getId());
        // –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –ø—Ä–æ–≤–µ—Ä–∏–º –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É - –µ—Å–ª–∏ –µ—Å—Ç—å –∑–∞–∫–∞–∑—ã –Ω–æ –Ω–µ—Ç —á–µ–∫–æ–≤, —Å–æ–∑–¥–∞–¥–∏–º —á–µ–∫–∏
        if (!userOrders.isEmpty()) {
            // –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —á–µ–∫–∏ - –µ—Å–ª–∏ –Ω–µ—Ç, —Å–æ–∑–¥–∞–¥–∏–º
            try {
                // –°–æ–∑–¥–∞–µ–º —á–µ–∫–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–µ—Ä–≤—ã—Ö –¥–≤—É—Ö –∑–∞–∫–∞–∑–æ–≤
                List<Receipt> receipts = Arrays.asList(
                    createReceipt(user, userOrders.get(0), "RCP-2024-001", new BigDecimal("299.99"), LocalDateTime.now().minusDays(15)),
                    createReceipt(user, userOrders.size() > 1 ? userOrders.get(1) : userOrders.get(0), "RCP-2024-002", new BigDecimal("149.50"), LocalDateTime.now().minusDays(3))
                );
                receiptRepository.saveAll(receipts);
                System.out.println("Initialized " + receipts.size() + " receipts for user");
            } catch (Exception e) {
                System.out.println("Receipts may already exist or error occurred: " + e.getMessage());
            }
        }
    }
      private void initializeReviewsForUser(User user) {
        try {
            List<Review> reviews = Arrays.asList(
                createReview(user, "1", "Wireless Headphones", 5, "Excellent sound quality!", LocalDateTime.now().minusDays(10)),
                createReview(user, "2", "Bluetooth Speaker", 4, "Good battery life", LocalDateTime.now().minusDays(5))
            );
            reviewRepository.saveAll(reviews);
            System.out.println("Initialized " + reviews.size() + " reviews for user");
        } catch (Exception e) {
            System.out.println("Reviews may already exist or error occurred: " + e.getMessage());
        }
    }
    
    private void initializeComplaintsForUser(User user) {
        try {
            List<Complaint> complaints = Arrays.asList(
                createComplaint(user, "Defective product", "Product arrived damaged", ComplaintStatus.OPEN, LocalDateTime.now().minusDays(2)),
                createComplaint(user, "Late delivery", "Package arrived 3 days late", ComplaintStatus.RESOLVED, LocalDateTime.now().minusDays(7))
            );
            complaintRepository.saveAll(complaints);
            System.out.println("Initialized " + complaints.size() + " complaints for user");
        } catch (Exception e) {
            System.out.println("Complaints may already exist or error occurred: " + e.getMessage());
        }
    }
    
    private void initializeDiscountsForUser(User user) {
        try {
            List<UserDiscount> discounts = Arrays.asList(
                createDiscount(user, "SAVE20", "20% off on electronics", DiscountType.PERCENTAGE, new BigDecimal("20"), LocalDateTime.now().plusDays(30)),
                createDiscount(user, "FREESHIP", "Free shipping", DiscountType.FIXED_AMOUNT, new BigDecimal("0"), LocalDateTime.now().plusDays(15)),
                createDiscount(user, "WELCOME10", "Welcome discount", DiscountType.PERCENTAGE, new BigDecimal("10"), LocalDateTime.now().minusDays(5))
            );
            userDiscountRepository.saveAll(discounts);
            System.out.println("Initialized " + discounts.size() + " discounts for user");
        } catch (Exception e) {
            System.out.println("Discounts may already exist or error occurred: " + e.getMessage());
        }
    }
    
    private void initializeReturnsForUser(User user) {
        List<Order> userOrders = orderRepository.findByUserIdOrderByOrderDateDesc(user.getId());
        if (!userOrders.isEmpty()) {
            try {
                List<Return> returns = Arrays.asList(
                    createReturn(user, userOrders.get(0), "DEFECTIVE", ReturnStatus.IN_TRANSIT, new BigDecimal("99.99"), LocalDateTime.now().minusDays(3)),
                    createReturn(user, userOrders.size() > 1 ? userOrders.get(1) : userOrders.get(0), "NOT_AS_DESCRIBED", ReturnStatus.COMPLETED, new BigDecimal("79.99"), LocalDateTime.now().minusDays(10))
                );
                returnRepository.saveAll(returns);
                System.out.println("Initialized " + returns.size() + " returns for user");
            } catch (Exception e) {
                System.out.println("Returns may already exist or error occurred: " + e.getMessage());
            }
        }
    }
    
    // Helper methods for creating profile entities
    private Order createOrder(User user, String orderNumber, OrderStatus status, BigDecimal amount, LocalDateTime orderDate) {
        Order order = new Order();
        order.setUser(user);
        order.setOrderNumber(orderNumber);
        order.setStatus(status);
        order.setTotalAmount(amount);
        order.setCurrency("USD");
        order.setOrderDate(orderDate);
        order.setShippingAddress("123 Test Street, Test City, TC 12345");
        order.setBillingAddress("123 Test Street, Test City, TC 12345");
        order.setPaymentMethod("Credit Card");
        order.setPaymentStatus("Paid");
        return order;
    }
    
    private Receipt createReceipt(User user, Order order, String receiptNumber, BigDecimal amount, LocalDateTime issuedAt) {
        Receipt receipt = new Receipt();
        receipt.setUser(user);
        receipt.setOrder(order);
        receipt.setReceiptNumber(receiptNumber);
        receipt.setTotalAmount(amount);
        receipt.setTaxAmount(amount.multiply(new BigDecimal("0.08"))); // 8% tax
        receipt.setDiscountAmount(BigDecimal.ZERO);
        receipt.setShippingAmount(new BigDecimal("9.99"));
        receipt.setCurrency("USD");
        receipt.setPaymentMethod("Credit Card");
        receipt.setPaymentTransactionId("TXN-" + receiptNumber);
        receipt.setIssuedAt(issuedAt);
        receipt.setEmailSent(true);
        receipt.setEmailSentAt(issuedAt.plusMinutes(5));
        return receipt;
    }
      private Review createReview(User user, String productId, String productName, Integer rating, String comment, LocalDateTime createdAt) {
        Review review = new Review();
        review.setUser(user);
        review.setProductId(productId);
        review.setProductName(productName);
        review.setRating(rating);
        review.setComment(comment);
        review.setCreatedAt(createdAt);
        review.setVerified(true);
        return review;
    }
    
    private Complaint createComplaint(User user, String subject, String description, ComplaintStatus status, LocalDateTime createdAt) {
        Complaint complaint = new Complaint();
        complaint.setUser(user);
        complaint.setSubject(subject);
        complaint.setDescription(description);
        complaint.setStatus(status);
        complaint.setCreatedAt(createdAt);
        return complaint;
    }
      private UserDiscount createDiscount(User user, String code, String description, DiscountType type, BigDecimal value, LocalDateTime validUntil) {
        UserDiscount discount = new UserDiscount();
        discount.setUser(user);
        discount.setDiscountCode(code);
        discount.setDiscountName(description);
        discount.setType(type);
        discount.setValue(value);
        discount.setValidFrom(LocalDateTime.now().minusDays(1));
        discount.setValidUntil(validUntil);
        discount.setUsed(code.equals("WELCOME10")); // WELCOME10 is already used
        if (discount.isUsed()) {
            discount.setUsedAt(LocalDateTime.now().minusDays(2));
        }
        return discount;
    }
    
    private Return createReturn(User user, Order order, String reasonString, ReturnStatus status, BigDecimal amount, LocalDateTime createdAt) {
        Return returnItem = new Return();
        returnItem.setUser(user);
        returnItem.setOrder(order);
        returnItem.setReturnNumber("RET-" + System.currentTimeMillis());
        // Convert string to ReturnReason enum
        try {
            ReturnReason reason = ReturnReason.valueOf(reasonString);
            returnItem.setReason(reason);
        } catch (IllegalArgumentException e) {
            returnItem.setReason(ReturnReason.OTHER);
        }
        returnItem.setStatus(status);
        returnItem.setRefundAmount(amount);
        returnItem.setRequestedAt(createdAt);
        returnItem.setDescription("Return request for " + reasonString.toLowerCase().replace("_", " "));
        return returnItem;
    }
}

